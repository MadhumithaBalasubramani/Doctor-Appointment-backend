import { useDispatch, useSelector } from "react-redux";
import Layout from "../components/Layout";
import React, { useEffect, useState } from "react";
// import { authAxios } from "../../middlewares/AxiosInstance";
import axios from "axios";
import { useNavigate, useParams } from "react-router-dom";
import { hideLoading, showLoading } from "../Redux/reducer";
import toast from "react-hot-toast";
import DoctorForm from "../components/DoctorForm";
const url = process.env.REACT_APP_API_URL;
function DoctorProfile() {
  const navigate = useNavigate();
  const dispatch = useDispatch();
  const { user } = useSelector((state) => state.user);
  const params=useParams()
  const [doctor,setDoctor]=useState(null);
  const handleSubmit = async (values) => {
    try {
      dispatch(showLoading());
      const response = await axios.post(`${url}/apply-doctor-account`,
        { ...values, userId: user._id },
        {
          headers: {
            Authorization: `Bearer ${localStorage.getItem("token")}`,
          },
        }
      );

      dispatch(hideLoading());
      if (response.data.success) {
        toast.success(response.data.message);
        navigate("/");
      } else {
        toast.error(response.data.message);
      }
    } catch (error) {
      dispatch(hideLoading());
      toast.error("something went wrong");
    }
    // console.log('success:',values);
  };
  const getDoctorDatainfo = async () => {
    try {
      dispatch(showLoading());
      const response = await axios.get(`${url}/getdoctorslist`,       
        {
          headers: {
            Authorization: `Bearer ${localStorage.getItem("token")}`,
          },
        }
        
      );
      dispatch(hideLoading());
      setDoctor(response.data.data);
      console.log("data",doctor);
      // if (response.data.success) {
      //  setDoctor(response.data.data);
      //  console.log("data",doctor)
      // } 
      }
    catch (error) {
      console.log(error)
      dispatch(hideLoading());

    }
  };
  useEffect(() => {
    {
      getDoctorDatainfo();
    }
  }, []);
  return (
    <Layout>
        <h1>DOCTOR PROFILE</h1>
       {doctor && doctor.length>0 ? (
        doctor.map((doctors,i)=>(<p>{doctors.userId}</p>))
        
        ):(
          <DoctorForm
          buttonText="Update"
          title="Doctor Profile"
          handleSubmit={handleSubmit}
          initialValues={doctor}
        />
       )} 
       
 
    </Layout>
  );
}

export default DoctorProfile;

const Doctor = require("../Model/doctorModel");
const doctorInfo = async (req, res) => {
  console.log(req.body.userId);
  try {
    const doctor = await Doctor.findOne({ userId: req.body.userId });
    res
      .status(200)
      .send({ message: `Doctor info fetched successfully`, success: true,data:doctor});
  } catch (error) {
    res
      .status(401)
      .send({ message: "failed to get Doctor info", success: false, error });
  }
};

module.exports = {
  doctorInfo,
};

